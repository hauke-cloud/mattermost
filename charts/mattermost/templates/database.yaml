{{- if .Values.database.enabled }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ include "mattermost.name" . }}-db
  labels:
    {{- include "mattermost.labels" . | nindent 4 }}
spec:
  description: {{ .Values.database.description | quote }}
  imageName: {{ .Values.database.image.repository }}:{{ .Values.database.image.tag | default "latest" }}
  instances: {{ .Values.database.replicaCount | default 3 }}

  storage:
    size: {{ .Values.database.storage.size | default "10Gi" }}
    {{- with .Values.database.storage.storageClass }}
    storageClass: {{ . }}
    {{- end }}

  {{- with .Values.database.resources }}
  resources:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  superuserSecret:
    name: {{ .Values.database.superuserSecretName | default (printf "%s-superuser" (include "mattermost.name" .)) }}

  {{- with .Values.database.bootstrap }}
  bootstrap:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{ if and (hasKey .Values.database "backup") (hasKey .Values.database.backup "existingSecret") (hasKey .Values.database.backup.existingSecret "s3") }}
  projectedVolumeTemplate:
    sources:
      - secret:
          name: {{ .Values.database.backup.existingSecret.s3.name }}
          items:
            - key: {{ .Values.database.backup.existingSecret.s3.credentialsKey | default "credentials" }}
              path: credentials
            - key: {{ .Values.database.backup.existingSecret.s3.configKey | default "config" }}
              path: config

  env:
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: /projected/credentials
    - name: AWS_CONFIG_FILE
      value: /projected/config
    - name: AWS_PROFILE
      value: {{ .Values.database.backup.existingSecret.s3.profileName | default "cnpg" }}
  {{- end }}

  enableSuperuserAccess: {{ .Values.database.enableSuperuserAccess | default false }}
  primaryUpdateStrategy: {{ .Values.database.primaryUpdateStrategy | default "unsupervised" }}
  enablePDB: {{ .Values.database.enablePDB | default true }}

  affinity:
    topologyKey: "kubernetes.io/hostname"

  {{- with .Values.database.monitoring }}
  monitoring:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- with .Values.database.backup }}
  backup:
    {{- with .barmanObjectStore }}
    barmanObjectStore:
      {{- toYaml . | nindent 6 }}
      s3Credentials:
        inheritFromIAMRole: true
    {{- end }}
    {{- with .retentionPolicy }}
    retentionPolicy:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  {{- end }}

  {{- with .Values.database.postgresql }}
  postgresql:
    {{- toYaml . | nindent 4}}
  {{- end }}
{{- end }}
